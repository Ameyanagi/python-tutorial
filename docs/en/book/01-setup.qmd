# Environment Setup

In this chapter, we'll set up your Python development environment using modern tools.

## Python Installation

We recommend Python 3.12 or higher for the best type hinting support.

### Windows
```bash
# Using winget
winget install Python.Python.3.12

# Using Microsoft Store
# Search for "Python 3.12" in Microsoft Store
```

### macOS
```bash
# Using Homebrew
brew install python@3.12

# Using pyenv
pyenv install 3.12.8
pyenv global 3.12.8
```

### Linux
```bash
# Ubuntu/Debian
sudo apt update
sudo apt install python3.12 python3.12-venv

# Fedora
sudo dnf install python3.12

# Arch Linux
sudo pacman -S python
```

## Environment Managers

### uv (Recommended)

uv is the fastest Python package manager and environment tool.

#### Installation
```bash
# Linux/macOS
curl -LsSf https://astral.sh/uv/install.sh | sh

# Windows
powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
```

#### Usage
```bash
# Create project
uv init my-project
cd my-project

# Create virtual environment
uv venv

# Add packages
uv add requests pandas

# Run commands
uv run python script.py
uv run pytest
```

### Poetry (Alternative)

Poetry provides dependency management and packaging.

#### Installation
```bash
curl -sSL https://install.python-poetry.org | python3 -
```

#### Usage
```bash
# Create project
poetry new my-project
cd my-project

# Add dependencies
poetry add requests pandas

# Install dependencies
poetry install

# Run commands
poetry run python script.py
```

### Miniforge (For Data Science)

Miniforge provides conda with conda-forge as default channel.

#### Installation
```bash
# Download from https://github.com/conda-forge/miniforge
# Run installer script
bash Miniforge3-Linux-x86_64.sh
```

#### Usage
```bash
# Create environment
conda create -n myenv python=3.12
conda activate myenv

# Install packages
conda install pandas numpy matplotlib
```

## Exercises

1. **Install Python 3.12** on your system
2. **Install uv** and create a test project
3. **Create virtual environment** and add pandas
4. **Run simple Python script** using uv run

## Next Steps

Now that your environment is ready, let's learn about [Git and GitHub](02-git-github.qmd) for version control.